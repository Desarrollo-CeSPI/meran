/*
 * Meran - MERAN UNLP is a ILS (Integrated Library System) wich provides Catalog,
 * Circulation and User's Management. It's written in Perl, and uses Apache2
 * Web-Server, MySQL database and Sphinx 2 indexing.
 * Copyright (C) 2009-2013 Grupo de desarrollo de Meran CeSPI-UNLP
 *
 * This file is part of Meran.
 *
 * Meran is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Meran is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Meran.  If not, see <http://www.gnu.org/licenses/>.
 */

var http = require('http')
  , ansi = require('./')
  , Canvas = require('canvas')
  , Image = Canvas.Image
  , imageFile = process.argv[2] || __dirname + '/examples/yoshi.png'
  , image = require('fs').readFileSync(imageFile)

var img = new Image()
img.src = image

var server = http.createServer(function (req, res) {
  draw(res);
})

server.listen(8080, function () {
  console.error('HTTP server listening on:', this.address())
})

function draw (stream) {
  var cursor = ansi(stream)
    , pixel = '  '
    , width = img.width
    , scaleW = img.width > width ? width / img.width : 1
    , w = Math.floor(img.width * scaleW)
    , h = Math.floor(img.height * scaleW);

  var canvas = new Canvas(w, h)
    , ctx = canvas.getContext('2d');

  ctx.drawImage(img, 0, 0, w, h);

  var data = ctx.getImageData(0, 0, w, h).data;

  for (var i=0, l=data.length; i<l; i+=4) {
    var r = data[i]
      , g = data[i+1]
      , b = data[i+2]
      , alpha = data[i+3];
    if (alpha > 0) {
      cursor.bg.rgb(r, g, b);
    } else {
      cursor.bg.reset();
    }
    stream.write(pixel);
    if ((i/4|0) % w === (w-1)) {
      cursor.bg.reset();
      stream.write('\n');
    }
  }
  stream.end();
}
